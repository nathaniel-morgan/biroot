% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quadroot_discrete.R
\name{quadroot_discrete}
\alias{quadroot_discrete}
\title{Find points on boundary of discrete classification}
\value{
A dataframe with a row for each point with columns giving, location,
how deep in the grid search they were, a unique id for each square,
and finally the result of the discrete function at that point.
}
\description{
Find points on boundary of discrete classification
}
\section{Arguments}{
 \code{quadroot_discrete()} understands the following arguments:
\itemize{
\item sq - corners of the region to be searched
\item f - function for discrete classification over region
\item max_depth - how many times should the grid be split in four
\item min_depth - how many times should the grid split before becoming adaptive
\item ... - additional arguments for f
}
}

\examples{
# using it to plot boundaries of qda

set.seed(17)
df <- data.frame(x = rnorm(40), y=rnorm(40) + 2, class = factor("A")) |> 
  rbind(data.frame(x = rnorm(40, sd=2) + 2, y=rnorm(40, sd = 2) - 1, class = factor("B"))) |> 
  rbind(data.frame(x = rnorm(40, sd=1/2) + 2, y=rnorm(40, sd = 1/2) + 1,class = factor("C")))

names(df)[3] <- "fill"

disc_qda <- do.call(MASS::qda, args = list(fill~., data=df))

qda_square <- expand.grid(x=c(min(df$x),max(df$x)),
                          y=c(min(df$y),max(df$y)))[c(1,3,4,2),]

qda_pred <- function(x, mod){
  as.character(predict(mod,x)$class)
}

df_test <- quadroot_discrete(sq = qda_square, f = qda_pred, mod = disc_qda, max_depth = 8)
df_test |> ggplot(aes(x,y, fill = class , group = id, col = class))+
  geom_polygon()

}
